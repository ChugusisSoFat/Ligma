-- // Variables
local name = game.Players.LocalPlayer.Character.Name
local HttpServ = game:GetService("HttpService")
local sizetable = {"Portrait", "Landscape"}
local currentsize = "Portrait"
local player = game.Players.LocalPlayer
local name = game.Players.LocalPlayer.Name

-- // Auto Save
function AutoSave()
    if isfolder("Ligma Balls Hub/Cheese Burger") then
        if isfile("Ligma Balls Hub/Cheese Burger/"..name.." Config.json") then
            writefile("Ligma Balls Hub/Cheese Burger/"..name.." Config.json", HttpServ:JSONEncode(SaveSetting))
            return true
        else
            writefile("Ligma Balls Hub/Cheese Burger/"..name.." Config.json", HttpServ:JSONEncode(SaveSetting))
            return true
        end
    else
        makefolder("Ligma Balls Hub")
        makefolder("Ligma Balls Hub/Cheese Burger")
    end
end

function StartFolder()
    if isfolder("Ligma Balls Hub/Cheese Burger") then
        return true
    else
        makefolder("Ligma Balls Hub")
        makefolder("Ligma Balls Hub/Cheese Burger")
    end
end

function StartFile()
    if isfile("Ligma Balls Hub/Cheese Burger/"..name.." Config.json") then
        SaveSetting = HttpServ:JSONDecode(readfile("Ligma Balls Hub/Cheese Burger/"..name.." Config.json"))
        --
        return true
    else
        SaveSetting = {
        ["Burger"] = false
        }
        writefile("Ligma Balls Hub/Cheese Burger/"..name.." Config.json", HttpServ:JSONEncode(SaveSetting))
        return true
    end
end

while not StartFolder() do wait()
    StartFolder()
end

while not StartFile() do wait()
    StartFile()
end

-- Function Gui Size
function guisize()
    for i,v in pairs(game:GetService("CoreGui").ScreenGui:GetChildren()) do
        if i == 4 then
            if currentsize == "Portrait" then
                v.Size = UDim2.new(0, 600, 0, 600)
            elseif currentsize == "Landscape" then
                v.Size = UDim2.new(0, 900, 0, 560)
            end
        end
    end
end

-- AutoFarm
function autofarm()
local t = tick() local reopen = tick()
    if not SaveSetting["AutoFarmCar"] then
        if farmin then
            Library:Notify('AutoFarm Is Now Enabled', 2)
            while farmin do task.wait(1)
                local reopendelay = tick() - reopen
                if reopendelay < 300 then   
                    if not player.Humanoid.Sit then
                        player.Humanoid:ChangeState(3) task.wait(1)
                        game.workspace[name].PrimaryPart.CFrame = CFrame.new(-34432.3203, 35.0461044, -32710.3379, -0.895207644, 3.02965901e-08, -0.445649296, 5.19329895e-08, 1, -3.63384842e-08, 0.445649296, -5.56743878e-08, -0.895207644) task.wait(1)
                        game.workspace[name].PrimaryPart.CFrame = CFrame.new(-34432.3203, 35.0461044, -32710.3379, -0.895207644, 3.02965901e-08, -0.445649296, 5.19329895e-08, 1, -3.63384842e-08, 0.445649296, -5.56743878e-08, -0.895207644) task.wait(1)
                        local args = {
                            [1] = "Spawn",
                            [2] = "GSXR"
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("VehicleEvent"):FireServer(unpack(args)) task.wait(0.5)
                        Library:Notify('Spawned A Car', 2) 
                    end
                    task.spawn(function()
                        while farmin do wait()
                            pcall(function()
                                for i,v in pairs(game:GetService("Workspace").Vehicles[name]:GetDescendants()) do
                                    if v.Name == "Wheel" then
                                        v.Velocity = Vector3.new(500/2,0,500)
                                    end
                                end
                            end)
                        end
                    end)
                    task.spawn(function()
                        while farmin do wait()
                            time = tpdelay - t
                            if time > 10 then
                                pcall(function()
                                    game:GetService("Workspace").Vehicles[name]:SetPrimaryPartCFrame(CFrame.new(-34432.3203, 35.0461044, -32710.3379, -0.895207644, 3.02965901e-08, -0.445649296, 5.19329895e-08, 1, -3.63384842e-08, 0.445649296, -5.56743878e-08, -0.895207644))
                                end)
                                t = tick()
                            end
                        end
                    end)
                else
                    AutoFarm:SetValue(false) wait(1) AutoFarm:SetValue(true)
                end
            end
        else
            Library:Notify('Auto Farm Is Now Disabled', 2)
        end
    else
        Library:Notify('Select Your Car', 2)
        AutoFarm:SetValue(false)
    end
end
-- Load UI Lib
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/ChugusisSoFat/Ligma/main/Linoria%20UI'))()
local ThemeManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/ChugusisSoFat/Ligma/main/Linoria%20Theme'))()

-- // Notify Error
ScriptContext = game:GetService("ScriptContext")
NotifyError = ScriptContext.Error:Connect(function(message, line)
    if string.find(message, ":%d:") then
        message = string.gsub(message, "%p%d%p", "")
        line = string.gsub(line, ", line", "At Line")
        atLine = string.gsub(line,"%a","")
        atLine2 = string.gsub(atLine,"%s","")
        Library:Notify(" \u{274C} Something Got Error \u{274C}\n\n"..message.." At Line "..atLine2, 5)
    end
end)

-- // Create Tabs
local Window = Library:CreateWindow({
    Title = 'Ligma Balls Hub - ' ..'Cheese Burger',
    Center = true,
    AutoShow = false,
    TabPadding = 8,
    MenuFadeTime = 0.2
})
local Tabs = {
    Main = Window:AddTab('Main'),
    Misc = Window:AddTab('Misc'),
    Setting = Window:AddTab('Setting'),
}

-- // Welcome
Library:Notify('Welcome To Ligma Balls Hub', 4)

local GroupAutoFarm = Tabs.Main:AddLeftTabbox()
local TabAutoFarm = GroupAutoFarm:AddTab('Auto Farm')
AutoFarm = TabAutoFarm:AddToggle('TabToggle', { 
    Text = 'Enable',
    Default = false,
    Tooltip = 'Will Farm Cash Automaticly',
    Callback = function(Value)
    farmin = Value
    autofarm()
end
})

-- // Dynamic Stats Label
function getcar()
totalcar = 0
for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainHUD.Vehicles.Container.List:GetChildren()) do
    if v.Name ~= "UIGridLayout" and v.Name ~= "Template" and v.Name ~= "BuyButton" then
        totalcar = totalcar + 1
    end
end
return totalcar
end

Stats = Tabs.Main:AddRightGroupbox('\u{26A1} Player Informations \u{26A1}')
PStat = game:GetService("Players").LocalPlayer.PlayerGui.MainHUD.SideHUD.Bottom.Money.Money
User = string.format("\u{1F440} Username : %s", name)
Money = string.format("\u{1F4B0} Player Money : %s", PStat.Text)
TTCar = string.format("\u{1F697} Total Car : %s", getcar())
Label = Stats:AddLabel("\n"..User.."\n\n"..Money.."\n\n"..TTCar.."\n", true)

PStat:GetPropertyChangedSignal("Text"):Connect(function()
    Money = string.format("\u{1F4B0} Player Money : %s", PStat.Text)
    Label:SetText("\n"..User.."\n\n"..Money.."\n\n"..TTCar.."\n", true)
end)
game:GetService("Players").LocalPlayer.PlayerGui.MainHUD.Vehicles.Container.List.Changed:Connect(function()
    TTCar = string.format("\u{1F697} Total Car : %s", getcar())
    Label:SetText("\n"..User.."\n\n"..Money.."\n\n"..TTCar.."\n", true)
end)

-- // Start Conifg
for i,v in pairs(SaveSetting) do
    if v == true then
        if i == "Burger" then
            --
        end
    end
end

-- // WaterMark
Library:SetWatermarkVisibility(true)
Library:SetWatermark('\u{26A0} Ligma Balls Hub - Press To Toggle GUI')
Library:OnUnload(function()
    Library.Unloaded = true
end)

-- // Settings
local MenuGroup = Tabs.Setting:AddLeftGroupbox('Destroy UI')
MenuGroup:AddButton('Destroy', function() NotifyError:Disconnect() Library:Unload() end)
MenuGroup:AddLabel('Toggle Keybind'):AddKeyPicker('MenuKeybind', { Default = 'LeftControl', NoUI = true, Text = 'Menu keybind' })
Library.ToggleKeybind = Options.MenuKeybind

-- // UI Settings
ThemeManager:SetLibrary(Library)
ThemeManager:ApplyToTab(Tabs.Setting)

local GuiSize = Tabs.Setting:AddRightGroupbox('Select Gui Size')
GuiSize:AddDropdown('Select GUI Size', {
    Values = sizetable,
    Default = currentsize,
    Multi = false,
    Text = '',
    Callback = function(Value)
        currentsize = Value
        guisize()
    end
})
