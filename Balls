-- // Over All Variables
local gname = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
local player = game.Players.LocalPlayer.Character
local mouse = game.Players.LocalPlayer:GetMouse()
local name = game.Players.LocalPlayer.Name
local vir = game:GetService("VirtualInputManager")
local HttpServ = game:GetService("HttpService")
-- // Auto Farm Variables
local mycar = {}
-- // Auto Race Variables
local map = {"Highway", "Drag", "Circuit", "SofiaBay", "Drawbridge","CrossCountry"}
local current_map = nil
local current_map_pos = nil
-- // ESP Variables
local espname = {}
local selectplayer = {}
local espcar = {}
local selectcar = {}
-- // Gui Size Variables
local sizetable = {"Portrait", "Landscape"}

-- // Auto Save
function AutoSave()
    if isfolder("Ligma Balls Hub/Cheese Burger") then
        if isfile("Ligma Balls Hub/Cheese Burger/"..name.." Config.json") then
            writefile("Ligma Balls Hub/Cheese Burger/"..name.." Config.json", HttpServ:JSONEncode(SaveSetting))
            return true
        else
            writefile("Ligma Balls Hub/Cheese Burger/"..name.." Config.json", HttpServ:JSONEncode(SaveSetting))
            return true
        end
    else
        makefolder("Ligma Balls Hub")
        makefolder("Ligma Balls Hub/Cheese Burger")
    end
end

function StartFolder()
    if isfolder("Ligma Balls Hub/Cheese Burger") then
        return true
    else
        makefolder("Ligma Balls Hub")
        makefolder("Ligma Balls Hub/Cheese Burger")
    end
end

function StartFile()
    if isfile("Ligma Balls Hub/Cheese Burger/"..name.." Config.json") then
        SaveSetting = HttpServ:JSONDecode(readfile("Ligma Balls Hub/Cheese Burger/"..name.." Config.json"))
        --
        return true
    else
        SaveSetting = {
            ["AutoFarm"] = false,
            ["AutoFarmCar"] = "Select Your Car",
            ["TPDelay"] = 10,
            ["AutoFarmSpeed"] = 500,
            ["AutoRace"] = false,
            ["TweenSpeed"] = 300,
            ["Map"] =  {"Highway", "Drag", "Circuit", "SofiaBay", "Drawbridge","CrossCountry"},
            ["AutoRaceCar"] = "Select Your Car",
            ["CarMod"] = false,
            ["CarModSpeed"] = 1.2,
            ["CarModCap"] = 500,
            ["WebhookEvery"] = false,
            ["WebhookDelay"] = 300,
            ["WebhookRace"] = false,
            ["WebhookUrl"] = "",
            ["CarTP"] = false,
            ["PlayerTP"] = false,
            ["Render"] = false,
            ["RenderKeybind"] = "K",
            ["GuiSize"] = "Portrait"
        }
        writefile("Ligma Balls Hub/Cheese Burger/"..name.." Config.json", HttpServ:JSONEncode(SaveSetting))
        return true
    end
end

while not StartFolder() do wait()
    StartFolder()
end

while not StartFile() do wait()
    StartFile()
end

-- // Function AutoFarm
function autofarm()
    reopen = tick()
    t = tick()
    cal = SaveSetting["AutoFarmSpeed"]
    cal1 = (cal/1.85)  - (cal/1.5)
    mul =  cal + cal1
    if SaveSetting["AutoFarmCar"] ~= "Select Your Car" then
        if SaveSetting["AutoFarm"] then
            Library:Notify('AutoFarm Is Now Enabled', 2)
            while SaveSetting["AutoFarm"] do task.wait(1)
                reopendelay = tick() - reopen
                if reopendelay < 300 then
                    if not player.Humanoid.Sit then wait(0.5)
                        player.Humanoid:ChangeState(3) wait(0.5)
                        workspace[name].PrimaryPart.CFrame = CFrame.new(-34432.3203, 35.0461044, -32710.3379, -0.895207644, 3.02965901e-08, -0.445649296, 5.19329895e-08, 1, -3.63384842e-08, 0.445649296, -5.56743878e-08, -0.895207644) task.wait(1)
                        workspace[name].PrimaryPart.CFrame = CFrame.new(-34432.3203, 35.0461044, -32710.3379, -0.895207644, 3.02965901e-08, -0.445649296, 5.19329895e-08, 1, -3.63384842e-08, 0.445649296, -5.56743878e-08, -0.895207644) task.wait(1)
                            local args = {
                            [1] = "Spawn",
                            [2] = SaveSetting["AutoFarmCar"]
                        }
                        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("VehicleEvent"):FireServer(unpack(args)) task.wait(0.5)
                        workspace.Vehicles[name].Seats.Seat:Destroy()
                        Library:Notify('Spawned A Car', 2) 
                    elseif not SaveSetting["AutoFarmCar"] then
                        Library:Notify('Please Select Your Car', 2)
                        AutoFarm:SetValue(false)
                    end
                    task.spawn(function()
                        while SaveSetting["AutoFarm"] do wait()
                            pcall(function()
                                if SaveSetting["AutoRace"] then 
                                    for i,v in pairs(game:GetService("Players")[name].PlayerGui.MainHUD.TeleportV2.Foreground.Locations:GetDescendants()) do
                                        if v.Name == "Amount" then
                                            if v.Visible == true then
                                                if v.Parent.Parent.Name == SaveSetting["Map"][1] or SaveSetting["Map"][2] or SaveSetting["Map"][3] or SaveSetting["Map"][4] or SaveSetting["Map"][5] or SaveSetting["Map"][6] then
                                                    break
                                                end
                                            end
                                        end
                                    end
                                end
                            end)
                        end
                    end)
                    task.spawn(function()
                        while SaveSetting["AutoFarm"] do wait()
                            pcall(function()
                                for i,v in pairs(game:GetService("Workspace").Vehicles[name]:GetDescendants()) do
                                    if v.Name == "Wheel" then
                                        v.Velocity = Vector3.new(mul/2,0,mul)
                                    end
                                end
                            end)
                        end
                    end)
                    task.spawn(function()
                        while SaveSetting["AutoFarm"] do wait()
                            time = tick() - t
                            if time > SaveSetting["TPDelay"] then
                                pcall(function()
                                    game:GetService("Workspace").Vehicles[name]:SetPrimaryPartCFrame(CFrame.new(-34432.3203, 35.0461044, -32710.3379, -0.895207644, 3.02965901e-08, -0.445649296, 5.19329895e-08, 1, -3.63384842e-08, 0.445649296, -5.56743878e-08, -0.895207644))
                                end)
                                t = tick()
                            end
                        end
                    end)

                else
                    AutoFarm:SetValue(false) wait(1) AutoFarm:SetValue(true)
                end
            end
        else
            Library:Notify('Auto Farm Is Now Disabled', 2)
        end
    elseif SaveSetting["AutoFarm"] then
        Library:Notify('Select Your Car', 2) wait(0.5)
        AutoFarm:SetValue(false)
    end
end

--// Function Auto Race
function autorace()
    task.spawn(function()
        noticon3 = true
        noticon4 = true
        while SaveSetting["AutoRace"] do wait()
            if SaveSetting["AutoRace"] then
                if SaveSetting["AutoRaceCar"] and SaveSetting["Map"][1] ~= nil then
                    -- // Check Map
                    pcall(function()
                        for g,r in pairs(game:GetService("Players")[name].PlayerGui.MainHUD.TeleportV2.Foreground.Locations:GetDescendants()) do
                            if r.Name == "Amount" then
                                if r.Visible == true then
                                    if r.Parent.Parent.Name == SaveSetting["Map"][1] or SaveSetting["Map"][2] or SaveSetting["Map"][3] or SaveSetting["Map"][4] or SaveSetting["Map"][5] or SaveSetting["Map"][6] then
                                        current_map = r.Parent.Parent.Name
                                    end
                                    -- // Set CFrame To Variable
                                    if current_map == "Circuit" then
                                        current_map_pos = CFrame.new(-5650.99512, 14.7393723, -4512.6543, -0.851452172, 5.46111885e-08, -0.524432302, 6.79772683e-08, 1, -6.23188523e-09, 0.524432302, -4.09556264e-08, -0.851452172)
                                    elseif current_map == "CrossCountry" then
                                        current_map_pos = CFrame.new(-352.041351, 25.6327438, -846.645569, 0.972404599, 1.1187069e-07, -0.233300775, -1.1153918e-07, 1, 1.46140637e-08, 0.233300775, 1.18113954e-08, 0.972404599)
                                    elseif current_map == "Drag" then
                                        current_map_pos = CFrame.new(-801.794617, 25.6771526, 245.037521, -0.962887824, -3.50851117e-08, 0.269901961, -2.86559043e-08, 1, 2.77607803e-08, -0.269901961, 1.89962321e-08, -0.962887824)
                                    elseif current_map == "Highway" then
                                        current_map_pos = CFrame.new(-30.2566242, 25.6372566, -142.385406, 0.647270739, 1.36994025e-08, -0.762260199, -7.29962402e-09, 1, 1.17736301e-08, 0.762260199, -2.05651318e-09, 0.647270739)
                                    elseif current_map == "Drawbridge" then
                                        current_map_pos = CFrame.new(-524.063232, 16.1740913, -3442.35449, -0.59755379, -3.03776169e-08, 0.801828802, 5.72805519e-08, 1, 8.05730949e-08, -0.801828802, 9.40759506e-08, -0.59755379)
                                    elseif current_map == "SofiaBay" then
                                        current_map_pos = CFrame.new(-12386.0732, 15.9740982, 1677.38904, -0.330974847, 4.77789897e-09, -0.943639576, -7.3561135e-10, 1, 5.3212772e-09, 0.943639576, 2.4553608e-09, -0.330974847)
                                    end
                                    -- // Spawn Car And Check Car
                                    if current_map ~= nil and current_map_pos ~= nil then
                                        if player.Humanoid.Sit == true then
                                            player.Humanoid:ChangeState(3)
                                        end
                                        task.wait(0.5)
                                        workspace[name].PrimaryPart.CFrame = CFrame.new(-701.405579, 25.5620232, -2049.59717, 0.160824433, 6.32707966e-08, -0.986983001, 3.69717164e-08, 1, 7.01296301e-08, 0.986983001, -4.77690136e-08, 0.160824433)
                                        task.wait(0.5)
                                        pcall(function()
                                            local args = {
                                            [1] = "Spawn",
                                            [2] = SaveSetting["AutoRace Car"]
                                            }
                                            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("VehicleEvent"):FireServer(unpack(args)) 
                                            task.wait(0.5)
                                            workspace.Vehicles[name].Seats.Seat:Destroy()
                                            con = true
                                        end)
                                        -- // TP Position
                                        if con then
                                        con = false
                                            if noticon4 then
                                                Library:Notify('Joining '..r.Parent.Parent.Name..' Race' , 2)
                                                noticon4 = false
                                            end
                                            pcall(function()
                                                game:GetService("Workspace").Vehicles[name]:SetPrimaryPartCFrame(current_map_pos * CFrame.new(1,5,1))
                                            end)  
                                        -- // Wait For Game To Start
                                            t3 = tick()
                                            local temp = {}
                                            check = true
                                            while check do wait()
                                                timecon = tick() - t3
                                                if timecon and t3 then
                                                    for i,v in pairs(workspace.Game.Races.LocalSession:GetChildren()) do
                                                        table.insert(temp,v)
                                                    end
                                                    if temp[1] ~= nil then
                                                        table.clear(temp)
                                                        check = false
                                                        check2 = true
                                                        timecon = nil
                                                        t3 = nil
                                                    elseif timecon > 20 then
                                                        if autofarmcon then
                                                            SaveSetting["AutoRace"] = false
                                                            timecon = nil
                                                            t3 = nil
                                                            check = false
                                                            current_map = nil
                                                            current_map_pos = nil
                                                            if player.Humanoid.Sit == true then
                                                                player.Humanoid:ChangeState(3)
                                                                workspace[name].PrimaryPart.CFrame = CFrame.new(-34432.3203, 35.0461044, -32710.3379, -0.895207644, 3.02965901e-08, -0.445649296, 5.19329895e-08, 1, -3.63384842e-08, 0.445649296, -5.56743878e-08, -0.895207644)
                                                                autofarm()
                                                                SaveSetting["AutoFarm"] = true
                                                            else
                                                                autofarm()
                                                                SaveSetting["AutoFarm"] = true
                                                            end
                                                            break
                                                        else
                                                            if player.Humanoid.Sit == true then
                                                                --player.Humanoid:ChangeState(3)--
                                                                task.wait(1)
                                                                workspace[name].PrimaryPart.CFrame = CFrame.new(-701.405579, 25.5620232, -2049.59717, 0.160824433, 6.32707966e-08, -0.986983001, 3.69717164e-08, 1, 7.01296301e-08, 0.986983001, -4.77690136e-08, 0.160824433)
                                                                task.wait(1)
                                                                timecon = nil t3 = nil check = false
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                            -- // Check Remove Child Function
                                            if check2 then task.wait(21)
                                                check2 = false
                                                disc = game:GetService("Workspace").Game.Races.LocalSession.ChildRemoved:Connect(function()
                                                    Library:Notify(r.Parent.Parent.Name..' Race Is Now End', 2)
                                                    task.wait(3)
                                                    loop = false
                                                    current_map = nil
                                                    current_map_pos = nil
                                                    isfinish = true
                                                    if race_end then
                                                        webhook()
                                                    end
                                                    for i = 1,2 do
                                                        local x = game:GetService("Players").LocalPlayer.PlayerGui.MainHUD.RaceEndNew.Exit.AbsolutePosition.x + 19
                                                        local y = game:GetService("Players").LocalPlayer.PlayerGui.MainHUD.RaceEndNew.Exit.AbsolutePosition.y + 41
                                                        vir:SendMouseButtonEvent(x, y, 0, false, game, 0)
                                                        wait()
                                                        vir:SendMouseButtonEvent(x, y, 0, true, game, 0)
                                                    end
                                                    disc:Disconnect()
                                                end)
                                                -- // Weld Car
                                                pcall(function()
                                                    for i,v in pairs(game:GetService("Workspace").Vehicles[name]:GetDescendants()) do
                                                        if v:IsA("BasePart") then
                                                            weld = Instance.new("WeldConstraint", workspace)
                                                            weld.Parent = game:GetService("Workspace").Vehicles[name]
                                                            weld.Part0 = game:GetService("Workspace").Vehicles[name].Weight
                                                            weld.Part1 = v
                                                        end
                                                    end
                                                end)
                                                -- // Change Goal Parent
                                                pcall(function()
                                                    for i,v in pairs(game:GetService("Workspace").Game.Races.LocalSession[current_map]:GetChildren()) do 
                                                        if v.Name == "Finish" then
                                                            v.Parent = game:GetService("Workspace").Game.Races.LocalSession[current_map].Checkpoints
                                                        end
                                                    end
                                                end)
                                                -- // Tween Function
                                                function tween(obj)
                                                    pcall(function()
                                                        magnitude = (obj.Position - game:GetService("Workspace").Vehicles[name].Weight.Position).Magnitude
                                                        Tween = game:GetService("TweenService")
                                                        Info = TweenInfo.new(magnitude/SaveSetting["Tween Speed"], Enum.EasingStyle.Sine, Enum.EasingDirection.In, 0, false, 0)
                                                        Car = game:GetService("Workspace").Vehicles[name].Weight
                                                        ToGo = {
                                                        CFrame = obj.CFrame
                                                        }
                                                        TweenTo = Tween:Create(Car, Info, ToGo)
                                                        TweenTo:Play()
                                                    end)
                                                end
                                                -- // Tween To Checkpoints
                                                loop = true
                                                pcall(function()
                                                    while loop do task.wait()
                                                        for i,v in pairs(game:GetService("Workspace").Game.Races.LocalSession[current_map].Checkpoints:GetChildren()) do
                                                            if v.Transparency == 0 then
                                                                if v.BrickColor == BrickColor.new("Bright blue") then
                                                                    tween(v)
                                                                    TweenTo.Completed:Wait()
                                                                elseif v.BrickColor == BrickColor.new("Neon orange") then
                                                                    tween(v)
                                                                    TweenTo.Completed:Wait()
                                                                end
                                                            end
                                                        end
                                                    end
                                                end)
                                            end
                                        end
                                    end
                                elseif autofarmcon then
                                    if isfinish then
                                        SaveSetting["AutoRace"] = false
                                        SaveSetting["AutoFarm"] = true
                                        isfinish = false
                                        autofarm()
                                        break
                                    end
                                end
                            end
                        end
                    end)
                elseif noticon3 then
                    Library:Notify('Please Select Your Car And Map', 2)
                    noticon3 = false
                end
            else 
            noticon3 = false noticon4 = false timecon = nil t3 = nil isfinish = false con = false check = false check2 = false loop = false 
            current_map = nil current_map_pos = nil pcall (function() disc:Disconnect() end) break
            end
        end
    end)
end

--// Function Car Mod
function carmod()
    task.spawn(function()
        if SaveSetting["CarMod"] then
        Library:Notify('Vehicle Speed Multiply By '.. SaveSetting["CarModSpeed"], 2)
            while SaveSetting["CarMod"] do task.wait()
                pcall(function()
                    local speed = tonumber(game:GetService("Players")[name].PlayerGui.ChassisHUD.Speedometer.Speed.Speed.Text)
                    for i,v in pairs(game:GetService("Workspace").Vehicles[name]:GetDescendants()) do
                        if v.Name == "Wheel" then
                            v.Velocity = v.Velocity * Vector3.new(SaveSetting["CarModSpeed"],1,SaveSetting["CarModSpeed"])
                            if speed > SaveSetting["CarModCap"] then
                                v.Velocity = Vector3.new(0,0,0)
                            end
                        end
                    end
                end)
            end
        else
            Library:Notify('Vehicle Speed Is Now Disabled', 2)
        end
    end)
end

--// Function Webhook X
function webhookx()
    task.spawn(function()
        while SaveSetting["WebhookEvery"] do wait(SaveSetting["WebhookDelay"])    
            if SaveSetting["WebhookUrl"] ~= "" then
                webhook(SaveSetting["WebhookUrl"])
            else
                Library:Notify('Please Put Webhook Url', 2)
            end
        end
    end)
end

-- // Function Webhook After Race
function sendwebhook()
    task.spawn(function()
        if SaveSetting["WebhookUrl"] ~= "" then
            webhook(SaveSetting["WebhookUrl"])
        else
            Library:Notify('Please Put Webhook Url', 2)
        end
    end)
end

-- // Function Car TP
function cartp()
    task.spawn(function()
        if SaveSetting["CarTP"] then
            Library:Notify('Vehicle Click TP Is Now Enabled', 2)
            click = mouse.Button1Down:Connect(function()
                if player.Humanoid.sit == true then
                game:GetService("Workspace")[name].Parent = game:GetService("Workspace").Vehicles[name]
                    for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
                        if v.Name == name then
                            v:MoveTo(mouse.hit.Position)
                            game:GetService("Workspace").Vehicles[name][name].Parent = game:GetService("Workspace")
                        end
                    end
                end
            end)
        else
            Library:Notify('Vehicle Click TP Is Now Disabled', 2)
            pcall(function()
                click:Disconnect()
            end)
        end
    end)
end

-- // Function Player TP
function playertp()
    task.spawn(function()
        if SaveSetting["PlayerTP"] then
            Library:Notify('Player Click TP Is Now Enabled', 2)
            click2 = mouse.Button1Down:Connect(function()
                workspace[name].PrimaryPart.CFrame = mouse.hit
            end)
        else
            Library:Notify('Player Click TP Is Now Disabled', 2)
            pcall(function()
                click2:Disconnect()
            end)
        end
    end)
end

-- // Function Render
function render()
    task.spawn(function()
        if SaveSetting["Render"] then
            game:GetService("RunService"):Set3dRenderingEnabled(false)
            Library:Notify('3DRendering Is Now Disabled', 2)
            enabled = true
        else
            game:GetService("RunService"):Set3dRenderingEnabled(true)
            Library:Notify('3DRendering Is Now Enabled', 2)
            enabled = false
        end
    end)
end

-- // Gui Size
function guisize()
    for i,v in pairs(game:GetService("CoreGui").ScreenGui:GetChildren()) do
        if i == 4 then
            if SaveSetting["GuiSize"] == "Portrait" then
                v.Size = UDim2.new(0, 600, 0, 600)
            elseif SaveSetting["GuiSize"] == "Landscape" then
                v.Size = UDim2.new(0, 900, 0, 560)
            end
        end
    end
end

-- // Click Play Button
pcall(function()
    for i,v in pairs(game:GetService("Players")[name].PlayerGui:GetChildren()) do
        if v.Name == "Loading" then
            if v.Enabled == true then
                repeat task.wait(5)
                    for i = 1,3 do
                        x = v.Menu.Main.Play.Grad.AbsolutePosition.x
                        y = v.Menu.Main.Play.Grad.AbsolutePosition.y + 40
                        vir:SendMouseButtonEvent(x, y, 0, false, game, 0)
                        vir:SendMouseButtonEvent(x, y, 0, true, game, 0)
                    end
                until v.Enabled == false
            end
        end
    end
end)

-- // Anti AFK
task.spawn(function()
    pcall(function()
        game:GetService("Players").LocalPlayer.Idled:connect(function()
            vir:SendMouseButtonEvent(0, 0, 0, false, game, 0)
            wait()
            vir:SendMouseButtonEvent(0, 0, 0, true, game, 0)
        end)
    end)
end)

-- // Get Car
task.spawn(function()
    pcall(function()
        for i,v in pairs(game:GetService("ReplicatedStorage").Stats[name .."'s Stats"].Vehicles:GetChildren()) do
            if v.Value == true then
                table.insert(mycar, tostring(v))
            end
        end
    end)
end)

-- // ESP Players
for i,v in pairs(game.Players:GetChildren()) do
    table.insert(espname, v.Name)
end

-- // ESP Car
for i,v in pairs(game.workspace.Vehicles:GetChildren()) do
    table.insert(espcar, v.Name)
end

-- Load UI Lib
local Library = loadstring(game:HttpGet('https://raw.githubusercontent.com/ChugusisSoFat/Ligma/main/Linoria%20UI'))()
local ThemeManager = loadstring(game:HttpGet('https://raw.githubusercontent.com/ChugusisSoFat/Ligma/main/Linoria%20Theme'))()

-- // Create Tabs
local Window = Library:CreateWindow({
    Title = 'Ligma Balls Hub - ' ..gname,
    Center = true,
    AutoShow = false,
    TabPadding = 8,
    MenuFadeTime = 0.2
})
local Tabs = {
    Main = Window:AddTab('Main'),
    Misc = Window:AddTab('Misc'),
    Setting = Window:AddTab('Setting'),
}

-- // Welcome
Library:Notify('Welcome To Ligma Balls Hub', 4)

-- // Notify Error
ScriptContext = game:GetService("ScriptContext")
NotifyError = ScriptContext.Error:Connect(function(message, line)
    if string.find(message, ":%d:") then
        message = string.gsub(message, "%p%d%p", "")
        line = string.gsub(line, ", line", "At Line")
        atLine = string.gsub(line,"%a","")
        atLine2 = string.gsub(atLine,"%s","")
        Library:Notify(" \u{274C} Something Got Error \u{274C}\n\n"..message.." At Line "..atLine2, 5)
    end
end)

-- // Auto Farm
local GroupAutoFarm = Tabs.Main:AddLeftTabbox()
local TabAutoFarm = GroupAutoFarm:AddTab('Auto Farm')
AutoFarm = TabAutoFarm:AddToggle('TabToggle', { 
    Text = 'Enable',
    Default = false,
    Tooltip = 'Will Farm Cash Automaticly',
    Callback = function(Value)
    SaveSetting["AutoFarm"] = Value
    autofarmcon = Value
    while not AutoSave() do task.wait()
        AutoSave()
    end
    autofarm()
end
})

-- // Select Car
TabAutoFarm:AddDropdown('AutoFarmRefresh', {
    Values = mycar,
    Default = SaveSetting["AutoFarmCar"] or "Please Select Your Car",
    Multi = false,
    Text = 'Select Vehicle',
    Callback = function(Value)
        SaveSetting["AutoFarmCar"] = Value
        Library:Notify('Selected Vehicle to '..SaveSetting["AutoFarm Car"], 2)
        while not AutoSave() do task.wait()
            AutoSave()
        end
    end
})

-- // Refresh Car List
TabAutoFarm:AddButton({
    Text = 'Refresh Vehicle List',
    DoubleClick = false,
    Func = function()
        table.clear(mycar)
        for i,v in pairs(game:GetService("ReplicatedStorage").Stats[name .."'s Stats"].Vehicles:GetChildren()) do
            if v.Value == true then
                table.insert(mycar ,tostring(v))
                Options.AutoFarmRefresh.Values = mycar
                Options.AutoFarmRefresh:SetValues()
            end
        end
        Library:Notify('Refresh Vehicle List Successfully', 2)
    end,
})

-- // Tp Delay
TabAutoFarm:AddSlider('MySlider', {
    Text = 'AutoFarm TP Delay',
    Default = SaveSetting["TPDelay"],
    Min = 1,
    Max = 30,
    Rounding = 0,
    Compact = false,
    Callback = function(Value)
        SaveSetting["TPDelay"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
    end
})

-- // Speed Multiplier
TabAutoFarm:AddSlider('MySlider', {
    Text = 'Speed For AutoFarm',
    Default = SaveSetting["AutoFarmSpeed"],
    Min = 1,
    Max = 1000,
    Rounding = 0,
    Compact = false,
    Callback = function(Value)
        cal = SaveSetting["AutoFarmSpeed"]
        cal1 = (cal/1.85)  - (cal/1.5)
        mul =  cal + cal1
        SaveSetting["AutoFarm Speed"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
    end
})

-- // Auto Race
local TabAutoFarm1 = GroupAutoFarm:AddTab('Auto Race')
AutoRace = TabAutoFarm1:AddToggle('TabToggle', { 
    Text = 'Enable',
    Default = false,
    Tooltip = 'Will Race Automaticly',
    Callback = function(Value)
        SaveSetting["AutoRace"] = Value
        racecon = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
        autorace()
    end
})

-- // Tween Speed
TabAutoFarm1:AddSlider('MySlider', {
    Text = 'Tween Speed',
    Default = SaveSetting["TweenSpeed"],
    Min = 1,
    Max = 1000,
    Rounding = 0,
    Compact = false,
    Callback = function(Value)
        SaveSetting["TweenSpeed"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
    end
})

-- // Select Map
TabAutoFarm1:AddDropdown('MyMultiDropdown', {
    Values = map,
    Default = SaveSetting["Map"],
    Multi = true,
    Text = 'Select Map',
    Callback = function(Value)
    end
})

Options.MyMultiDropdown:OnChanged(function()
    noticon2 = true
    pcall(function()
        table.clear(selectmap)
        for key, value in next, Options.MyMultiDropdown.Value do
            table.insert(selectmap, key)
        end
        SaveSetting["Map"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
    end)
end)

-- // Select Car
TabAutoFarm1:AddDropdown('AutoRaceRefresh', {
    Values = mycar,
    Default = SaveSetting["AutoRaceCar"],
    Multi = false,
    Text = 'Select Vehicle',
    Callback = function(Value)
        SaveSetting["AutoRaceCar"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
        Library:Notify('Selected Vehicle to '..SaveSetting["AutoRace Car"], 2)
    end
})

-- // Refresh Car List
TabAutoFarm1:AddButton({
    Text = 'Refresh Vehicle List',
    DoubleClick = false,
    Func = function()
        table.clear(mycar)
        for i,v in pairs(game:GetService("ReplicatedStorage").Stats[name .."'s Stats"].Vehicles:GetChildren()) do
            if v.Value == true then
                table.insert(mycar ,tostring(v))
                Options.AutoRaceRefresh.Values = mycar
                Options.AutoRaceRefresh:SetValues()
            end
        end
        Library:Notify('Refresh Vehicle List Successfully', 2)
    end,
})

-- // Car Mod
local GroupCarMod = Tabs.Main:AddLeftGroupbox('Car Modifier')
CarMod = GroupCarMod:AddToggle('MyToggle', {
    Text = 'Adjust Vehicle Speed',
    Default = false,
    Callback = function(Value)
        SaveSetting["CarMod"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
        carmod()
    end
})

-- // Speed Multiplier
GroupCarMod:AddSlider('MySlider', {
    Text = 'Speed Multiplier',
    Default = SaveSetting["CarModSpeed"],
    Min = 1,
    Max = 5,
    Rounding = 1,
    Compact = false,
    Callback = function(Value)
        SaveSetting["CarModSpeed"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
    end
})

-- // Speed Cap
GroupCarMod:AddInput('MyTextbox', {
    Default =  SaveSetting["CarModCap"],
    Numeric = true,
    Finished = true,
    Text = 'Speed Cap (Kinda)',
    Callback = function(Value)
        Value = tonumber(Value)
        SaveSetting["CarModCap"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
    end
})

-- // Dynamic Stats Label
function getcar()
    totalcar = 0
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.MainHUD.Vehicles.Container.List:GetChildren()) do
        if v.Name ~= "UIGridLayout" and v.Name ~= "Template" and v.Name ~= "BuyButton" then
            totalcar = totalcar + 1
        end
    end
    return totalcar
end

Stats = Tabs.Main:AddRightGroupbox('\u{26A1} Player Informations \u{26A1}')
PStat = game:GetService("Players").LocalPlayer.PlayerGui.MainHUD.SideHUD.Bottom.Money.Money
User = string.format("\u{1F440} Username : %s", name)
Money = string.format("\u{1F4B0} Player Money : %s", PStat.Text)
TTCar = string.format("\u{1F697} Total Car : %s", getcar())
Label = Stats:AddLabel("\n"..User.."\n\n"..Money.."\n\n"..TTCar.."\n", true)

PStat:GetPropertyChangedSignal("Text"):Connect(function()
    Money = string.format("\u{1F4B0} Player Money : %s", PStat.Text)
    Label:SetText("\n"..User.."\n\n"..Money.."\n\n"..TTCar.."\n", true)
end)
game:GetService("Players").LocalPlayer.PlayerGui.MainHUD.Vehicles.Container.List.Changed:Connect(function()
    TTCar = string.format("\u{1F697} Total Car : %s", getcar())
    Label:SetText("\n"..User.."\n\n"..Money.."\n\n"..TTCar.."\n", true)
end)

-- // Webhook
local GroupWebhook = Tabs.Main:AddRightGroupbox('Discord WebHook')

function webhook(discurl)
    time = DateTime.now():ToIsoDate()
    Info = {
        ["content"] = "",
        ["embeds"] = {
            {
                ["title"] = ":fire: Ligma Balls Hub - "..gname,
                ["description"] = ":eyes: **Username** : ".."||"..name.."||".."\n\n:moneybag: **MONEY** : "..game:GetService("Players").LocalPlayer.PlayerGui.MainHUD.SideHUD.Bottom.Money.Money.Text 
                .."\n\n:red_car:  **Player's Car** : "..getcar(),
                ["color"] = tonumber(4477042),
                ["timestamp"] = time,
                ["image"] = {
                url = "https://images6.alphacoders.com/133/1338290.png"
                }
            }
        }
    }

http.request(
    {
        Url =  SaveSetting["WebhookUrl"],
        Method = "Post",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = game:GetService("HttpService"):JSONEncode(Info)
    }
)
end

WebhookEvery = GroupWebhook:AddToggle('MyToggle', {
    Text = 'Send Webhook Every X Minute',
    Default = false,
    Callback = function(Value)
        SaveSetting["WebhookEvery"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
        webhookx()
    end
})

WebhookRace = GroupWebhook:AddToggle('MyToggle', {
    Text = 'Send Webhook After Race End',
    Default = false,
    Callback = function(Value)
        SaveSetting["WebhookRace"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
    end
})

GroupWebhook:AddSlider('MySlider', {
    Text = 'Send Webhook Every (Minute)',
    Default = SaveSetting["WebhookDelay"]/60,
    Min = 0,
    Max = 60,
    Rounding = 0,
    Compact = false,
    Callback = function(Value)
        SaveSetting["WebhookDelay"] = Value * 60
        while not AutoSave() do task.wait()
            AutoSave()
        end
    end
})

GroupWebhook:AddInput('MyTextbox', {
    Default =  SaveSetting["WebhookUrl"],
    Numeric = false,
    Finished = true,
    Text = 'Webhook Url',
    Placeholder = 'Paste Url Here',
    Callback = function(Value)
        SaveSetting["WebhookUrl"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
    end
})

GroupWebhook:AddButton({
    Text = 'Test Webhook',
    Func = function()
        sendwebhook()
    end,
    DoubleClick = false,
})

-- // Click TP
local TabTP = Tabs.Misc:AddLeftGroupbox('Click TP')
CarTP = TabTP:AddToggle('TabToggle', { 
    Text = 'Vehicle Click TP',
    Default = false,
    Tooltip = 'You will Need To Sit In A Vehicle To Make This Function Work',
    Callback = function(Value)
        SaveSetting["CarTP"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
        cartp()
    end
})

PlayerTP = TabTP:AddToggle('TabToggle', { 
    Text = 'Player Click TP',
    Default = false,
    Tooltip = 'Click Anywhere On Screen You Want To Go To',
    Callback = function(Value)
        SaveSetting["PlayerTP"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
        playertp()
    end
})

-- // Fps Booster
local TabFps = Tabs.Misc:AddLeftGroupbox('Boost Fps')
Render = TabFps:AddToggle('TabToggle', { 
    Text = 'Disable 3DRendering',
    Default = false,
    Callback = function(Value)
        SaveSetting["Render"] = Value
        while not AutoSave() do task.wait()
            AutoSave()
        end
        render()
    end
})

-- // Render Keynind
TabFps:AddLabel('3DRendering Keybind'):AddKeyPicker('KeyPicker', {
    Default = SaveSetting["RenderKeybind"],
    SyncToggleState = false,
    Mode = 'Toggle',
    Text = 'Keybind',
    NoUI = true,
    Callback = function(Value)
        if not enabled then
            Render:SetValue(true)
        else
            Render:SetValue(false)
        end
    end,
    ChangedCallback = function(New)
        tstring = tostring(New)
        keycode = string.gsub(tstring, "Enum.KeyCode.", "")
        SaveSetting["RenderKeybind"] = keycode
        while not AutoSave() do task.wait()
            AutoSave()
        end
        Library:Notify('Keybind Changed To '..keycode, 2)
    end
})

-- // Smooth Texture
TabFps:AddButton({
    Text = 'Smooth Texture',
    Func = function()
        for i,v in next, workspace:GetDescendants() do
            if v:IsA("BasePart") then
                v.Material = Enum.Material.SmoothPlastic
            end
        end
        Library:Notify('Changed Texture To SmoothPlastic', 2)
    end,
    DoubleClick = false,
})

-- // ESP DropDown
local ESPTab = Tabs.Misc:AddRightTabbox('ESP')
local ESPPlayer = ESPTab:AddTab('ESP Player')
ESPPlayer:AddDropdown('PlayerRefresh', {
    Values = espname,
    Default = "Player",
    Multi = true,
    Text = 'Select Player To Esp',
    Callback = function(Value)
        -- Nothing
    end
})

-- // ESP Color
ESPPlayer:AddLabel('ESP Color'):AddColorPicker('ColorPicker', {
    Default = Color3.new(1, 1, 1),
    Title = 'ESP Color',
    Transparency = 0,
    Callback = function(Value)
        ESPColor1 = Value
    end
})
Options.ColorPicker:OnChanged(function()
    for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
        if v:FindFirstChild("Highlight") then
            v.Highlight.FillColor = ESPColor1
        end
    end
end)

-- // Refresh Player
ESPPlayer:AddButton({
    Text = 'Refresh Player List',
    DoubleClick = false,
    Func = function()
        table.clear(espname)
        for i,v in pairs(game.Players:GetChildren()) do
            table.insert(espname, v.Name)
            Options.PlayerRefresh.Values = espname
            Options.PlayerRefresh:SetValues()
        end
        Library:Notify('Refresh Player List Successfully', 2)
    end,
})

-- // ESP OnChanged
Options.PlayerRefresh:OnChanged(function()
    table.clear(selectplayer)
    for key, value in next, Options.PlayerRefresh.Value do
        table.insert(selectplayer, key)
    end
    for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
        if table.find(selectplayer, v.Name) then 
            if not v:FindFirstChild("Gui") and not v:FindFirstChild("Highlight") then
                local Gui = Instance.new("BillboardGui")
                local Text = Instance.new("TextLabel")
                local Highlight = Instance.new("Highlight")
    
                Gui.Name = "Gui"
                Gui.Parent = v.Head
                Gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                Gui.Active = true
                Gui.AlwaysOnTop = true
                Gui.LightInfluence = 1.000
                Gui.Size = UDim2.new(0, 200, 0, 50)
    
                Text.Name = v.Name
                Text.Parent = Gui
                Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Text.BackgroundTransparency = 1.000
                Text.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Text.BorderSizePixel = 0
                Text.Size = UDim2.new(0, 200, 0, 50)
                Text.Font = Enum.Font.Bangers
                Text.Text = v.Name
                Text.TextColor3 = Color3.fromRGB(255, 255, 255)
                Text.TextScaled = true
                Text.TextSize = 14.000
                Text.TextStrokeTransparency = 0.000
                Text.TextWrapped = true
    
                Highlight.Name =  "Highlight"
                Highlight.Parent = v
                Highlight.Enabled = true
                Highlight.FillColor = ESPColor1
                Highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                Highlight.FillTransparency = 0.35
            end
        else 
            pcall(function()
                v.Head.Gui:Destroy()
                v.Highlight:Destroy()
            end)
        end
    end
end)

-- // ESP Car
local ESPCar = ESPTab:AddTab('ESP Car')
ESPCar:AddDropdown('CarRefresh', {
    Values = espcar,
    Default = "Player",
    Multi = true,
    Text = 'Select Car To Esp',
    Callback = function(Value)
        -- Nothing
    end
})

-- // ESP Color Car
ESPCar:AddLabel('ESP Color'):AddColorPicker('ColorPicker', {
    Default = Color3.new(1, 1, 1),
    Title = 'ESP Color',
    Transparency = 0,
    Callback = function(Value)
        ESPColor2 = Value
    end
})
Options.ColorPicker:OnChanged(function()
    for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if v:FindFirstChild("Highlight") then
            v.Highlight.FillColor = ESPColor2   
        end
    end
end)

-- // Refresh Player Car
ESPCar:AddButton({
    Text = 'Refresh Player Car List',
    DoubleClick = false,
    Func = function()
        table.clear(espcar)
        for i,v in pairs(game.workspace.Vehicles:GetChildren()) do
            table.insert(espcar, v.Name)
            Options.CarRefresh.Values = espcar
            Options.CarRefresh:SetValues()
        end
        Library:Notify('Refresh Player List Successfully', 2)
    end,
})

-- // ESP OnChanged Car
Options.CarRefresh:OnChanged(function()
    table.clear(selectcar)
    for key, value in next, Options.CarRefresh.Value do
        table.insert(selectcar, key)
    end
    for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if table.find(selectcar, v.Name) then 
            if not v:FindFirstChild("Gui") and not v:FindFirstChild("Highlight") then
                local Gui = Instance.new("BillboardGui")
                local Text = Instance.new("TextLabel")
                local Highlight = Instance.new("Highlight")
    
                Gui.Name = "Gui"
                Gui.Parent = v
                Gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                Gui.Active = true
                Gui.AlwaysOnTop = true
                Gui.LightInfluence = 1.000
                Gui.Size = UDim2.new(0, 200, 0, 50)
    
                Text.Name = v.Name
                Text.Parent = Gui
                Text.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Text.BackgroundTransparency = 1.000
                Text.BorderColor3 = Color3.fromRGB(0, 0, 0)
                Text.BorderSizePixel = 0
                Text.Size = UDim2.new(0, 200, 0, 50)
                Text.Font = Enum.Font.Bangers
                Text.Text = v.Name.."'s Car"
                Text.TextColor3 = Color3.fromRGB(255, 255, 255)
                Text.TextScaled = true
                Text.TextSize = 14.000
                Text.TextStrokeTransparency = 0.000
                Text.TextWrapped = true
    
                Highlight.Name =  "Highlight"
                Highlight.Parent = v
                Highlight.Enabled = true
                Highlight.FillColor = ESPColor2
                Highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                Highlight.FillTransparency = 0.35
            end
        else 
            pcall(function()
                v.Gui:Destroy()
                v.Highlight:Destroy()
            end)
        end
    end
end)

-- // WaterMark
Library:SetWatermarkVisibility(true)
Library:SetWatermark('\u{26A0} Ligma Balls Hub - Press To Toggle GUI')
Library:OnUnload(function()
    Library.Unloaded = true
end)

-- // Settings
local MenuGroup = Tabs.Setting:AddLeftGroupbox('Destroy UI')
MenuGroup:AddButton('Destroy', function() NotifyError:Disconnect() Library:Unload() end)
MenuGroup:AddLabel('Toggle Keybind'):AddKeyPicker('MenuKeybind', { Default = 'LeftControl', NoUI = true, Text = 'Menu keybind' })
Library.ToggleKeybind = Options.MenuKeybind

-- // Gui Settings
ThemeManager:SetLibrary(Library)
ThemeManager:ApplyToTab(Tabs.Setting)

-- // Gui Size
local GuiSize = Tabs.Setting:AddRightGroupbox('Select Gui Size')
GuiSize:AddDropdown('Select GUI Size', {
    Values = sizetable,
    Default = SaveSetting["GuiSize"],
    Multi = false,
    Text = '',
    Callback = function(Value)
        SaveSetting["GuiSize"] = Value
        guisize()
        while not AutoSave() do task.wait()
            AutoSave()
        end
    end
})

-- // Start Conifg
for i,v in pairs(SaveSetting) do
    if v == true then
        if i == "AutoFarm" then
            AutoFarm:SetValue(true)
        elseif i == "AutoRace" then
            AutoRace:SetValue(true)
        elseif i == "CarMod" then
            CarMod:SetValue(true)
        elseif i == "WebhookEvery" then
            WebhookEvery:SetValue(true)
        elseif i == "WebhookRace" then
            WebhookRace:SetValue(true)
        elseif i == "CarTP" then
            CarTP:SetValue(true)
        elseif i == "PlayerTP" then
            PlayerTP:SetValue(true)
        elseif i == "Render" then
            Render:SetValue(true)
        end
    end
    if i == "GuiSize" then
        guisize()
    end
end
